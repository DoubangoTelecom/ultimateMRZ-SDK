# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.9
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ultimateMrzSdk', [dirname(__file__)])
        except ImportError:
            import _ultimateMrzSdk
            return _ultimateMrzSdk
        if fp is not None:
            try:
                _mod = imp.load_module('_ultimateMrzSdk', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ultimateMrzSdk = swig_import_helper()
    del swig_import_helper
else:
    import _ultimateMrzSdk
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


ULTMRZ_SDK_VERSION_MAJOR = _ultimateMrzSdk.ULTMRZ_SDK_VERSION_MAJOR
ULTMRZ_SDK_VERSION_MINOR = _ultimateMrzSdk.ULTMRZ_SDK_VERSION_MINOR
ULTMRZ_SDK_VERSION_MICRO = _ultimateMrzSdk.ULTMRZ_SDK_VERSION_MICRO
ULTMRZ_SDK_IMAGE_TYPE_RGB24 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_RGB24
ULTMRZ_SDK_IMAGE_TYPE_RGBA32 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_RGBA32
ULTMRZ_SDK_IMAGE_TYPE_BGRA32 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_BGRA32
ULTMRZ_SDK_IMAGE_TYPE_NV12 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_NV12
ULTMRZ_SDK_IMAGE_TYPE_NV21 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_NV21
ULTMRZ_SDK_IMAGE_TYPE_YUV420P = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_YUV420P
ULTMRZ_SDK_IMAGE_TYPE_YVU420P = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_YVU420P
ULTMRZ_SDK_IMAGE_TYPE_YUV422P = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_YUV422P
ULTMRZ_SDK_IMAGE_TYPE_YUV444P = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_YUV444P
ULTMRZ_SDK_IMAGE_TYPE_Y = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_Y
ULTMRZ_SDK_IMAGE_TYPE_BGR24 = _ultimateMrzSdk.ULTMRZ_SDK_IMAGE_TYPE_BGR24
class UltMrzSdkResult(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UltMrzSdkResult, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UltMrzSdkResult, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _ultimateMrzSdk.new_UltMrzSdkResult(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ultimateMrzSdk.delete_UltMrzSdkResult
    __del__ = lambda self : None;
    def code(self): return _ultimateMrzSdk.UltMrzSdkResult_code(self)
    def phrase(self): return _ultimateMrzSdk.UltMrzSdkResult_phrase(self)
    def json(self): return _ultimateMrzSdk.UltMrzSdkResult_json(self)
    def numZones(self): return _ultimateMrzSdk.UltMrzSdkResult_numZones(self)
    def isOK(self): return _ultimateMrzSdk.UltMrzSdkResult_isOK(self)
UltMrzSdkResult_swigregister = _ultimateMrzSdk.UltMrzSdkResult_swigregister
UltMrzSdkResult_swigregister(UltMrzSdkResult)

class UltMrzSdkEngine(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UltMrzSdkEngine, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UltMrzSdkEngine, name)
    def __init__(self, *args, **kwargs): raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __swig_getmethods__["init"] = lambda x: _ultimateMrzSdk.UltMrzSdkEngine_init
    if _newclass:init = staticmethod(_ultimateMrzSdk.UltMrzSdkEngine_init)
    __swig_getmethods__["deInit"] = lambda x: _ultimateMrzSdk.UltMrzSdkEngine_deInit
    if _newclass:deInit = staticmethod(_ultimateMrzSdk.UltMrzSdkEngine_deInit)
    __swig_getmethods__["process"] = lambda x: _ultimateMrzSdk.UltMrzSdkEngine_process
    if _newclass:process = staticmethod(_ultimateMrzSdk.UltMrzSdkEngine_process)
    __swig_getmethods__["exifOrientation"] = lambda x: _ultimateMrzSdk.UltMrzSdkEngine_exifOrientation
    if _newclass:exifOrientation = staticmethod(_ultimateMrzSdk.UltMrzSdkEngine_exifOrientation)
    __swig_getmethods__["requestRuntimeLicenseKey"] = lambda x: _ultimateMrzSdk.UltMrzSdkEngine_requestRuntimeLicenseKey
    if _newclass:requestRuntimeLicenseKey = staticmethod(_ultimateMrzSdk.UltMrzSdkEngine_requestRuntimeLicenseKey)
    __swig_destroy__ = _ultimateMrzSdk.delete_UltMrzSdkEngine
    __del__ = lambda self : None;
UltMrzSdkEngine_swigregister = _ultimateMrzSdk.UltMrzSdkEngine_swigregister
UltMrzSdkEngine_swigregister(UltMrzSdkEngine)

def UltMrzSdkEngine_init(*args):
  return _ultimateMrzSdk.UltMrzSdkEngine_init(*args)
UltMrzSdkEngine_init = _ultimateMrzSdk.UltMrzSdkEngine_init

def UltMrzSdkEngine_deInit():
  return _ultimateMrzSdk.UltMrzSdkEngine_deInit()
UltMrzSdkEngine_deInit = _ultimateMrzSdk.UltMrzSdkEngine_deInit

def UltMrzSdkEngine_process(*args):
  return _ultimateMrzSdk.UltMrzSdkEngine_process(*args)
UltMrzSdkEngine_process = _ultimateMrzSdk.UltMrzSdkEngine_process

def UltMrzSdkEngine_exifOrientation(*args):
  return _ultimateMrzSdk.UltMrzSdkEngine_exifOrientation(*args)
UltMrzSdkEngine_exifOrientation = _ultimateMrzSdk.UltMrzSdkEngine_exifOrientation

def UltMrzSdkEngine_requestRuntimeLicenseKey(rawInsteadOfJSON=False):
  return _ultimateMrzSdk.UltMrzSdkEngine_requestRuntimeLicenseKey(rawInsteadOfJSON)
UltMrzSdkEngine_requestRuntimeLicenseKey = _ultimateMrzSdk.UltMrzSdkEngine_requestRuntimeLicenseKey

# This file is compatible with both classic and new-style classes.


